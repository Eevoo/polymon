<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhQwGDAIcAACws9jw42kg8vllEpV1MrkhI+mVQmWVQoaE8aZFEfWVVpWVVqmFVtmVVrmVVsmFV
        vmFZwmFZzmFZ1nFdlWFZ2rJIVaVIeWFZ3l1d4l1d5nlhhV1d6mVd1mFd4l1d8v84AHFhqrJMbXFhtm1h
        xmFh9v9AAGll2r5VTIFlnWVl/4ltdYVthf9IAGlp/8ZdUM5dPHFt7nVx2n1xxv9VAIV1oXFx/5l9YcZl
        bf9dAHV1/5l9dXl5//9lANptPJmBhX197sZ5SOZxIIWB1pGFrq6JUIGB//9xAJmJmYWF6pGJwqqNbYWF
        //95APJ9FPJ9IO59NKqRjY2N/7KVddaFbf+FAP+FCMaZPP+FEO6JKP+FFJGR/5mV1r6dVf+NAO6FWf+J
        GPqJJP+JHPqJKP+JIPqJLP+JJKqdsv+RDPqNMPqNNJmZ//qNOPqNPPqNQPqNRNKlNPqNSP+ZAPqNTJ2d
        +v+ZCPaRVfqRTLqlkfaRWfqVOPaRXdqqKMqqVfaRYfaRZfaVafaVbeKuJPaVcfKdVfaVdcauedayPPqd
        SPqhNPqlJP+qBNayTKqq+rauxrKu2s62ab6yrsqykeKudf+2APa6DLKy//auberCLPq2SO6yhfrGAO6+
        Vbq6+vbGFP/CFPrCIPq+TPrCON7Gcf/OAP/OBP/OCP/ODP/OENbGrv/OFP/SAP/OGMLC/9rKlfrKSPrS
        JP/SHPrSKNLKwv/SIPrSLP/SJMbK6vrSMPrSNPbKbfLSUPLSWfbSUNLOzvrWOMrK//rWPPrWQPrWRPbW
        UPrWSPrWTO7WddLS3vbaUObWlfbaVf/mAPbaWfbaXfbaYfbaZfbaadLS+vbabfbaceLasu7Wrvbecfbe
        dfLegfbeefLehfbeffLeie7elfLeje7asu7eodra//LikfLilfLimfLinfLiofLipfLiqt7e/+7mqu7m
        ru7msu7mtu7muu7mvu7mwuLi/+7qxu7qyurq1u7qzurq2u7q0urq4uru5urq/+ru6vLy//b2//r6////
        /yH/C05FVFNDQVBFMi4wAwEBAAAh+QQAAAAAACwAAAAAQwGDAAAI/wD/CRxIsKDBgwgTJtTnT6HDhxAj
        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
        cMEHJ7xwww9HPHHFvQ4IADs=
</value>
  </data>
</root>